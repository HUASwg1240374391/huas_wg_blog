vue 实现响应式并不是在数据发生变化后DOM立即变化，而是按照一定的策略进行DOM更新
    具体跟新机制类似于JS事件循环机制
    改变数据的操作数据JS主线程，当主线程任务栈执行完毕，再统一进行视图更新，所需要进行的视图更新会被推入微任务队列
    且同一个watcher被多次触发时，只会推入一个进入微任务队列，主线程任务栈执行完毕，开始执行异步 watcher 队列的任务，更新 DOM 
    Vue 在内部尝试对异步队列使用原生的 Promise.then 和 MessageChannel 方法，如果执行环境不支持，会采用 setTimeout(fn, 0) 代替
    
    此时就是文档所说的：

    下次 DOM 更新循环结束之后
    
    此时通过 Vue.nextTick 获取到改变后的 DOM 。通过 setTimeout(fn, 0) 也可以同样获取到。
    需要注意的是，在 created 和 mounted 阶段，如果需要操作渲染后的试图，也要使用 nextTick 方法。

    官方文档说明：

    注意 mounted 不会承诺所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以用 vm.$nextTick 替换掉 mounted