ES5和ES6继承的区别：
ES5组合继承
        缺点:父类实例的属性会被所有子类共享需要借用构造函数重新创建实例覆盖原型中的实例，
        导致调用两次父类的构造函数
        (一次父类实例化赋值给子类原型，一次子类构造函数首行调用覆盖父类实例属性：supertype.call(this))

ES6寄生组合继承：(class语法糖内部采用的寄生组合式继承)
            将父类的原型拷贝一份副本，将副本(Object.create(source))
            的construct属性指向子类构造函数，将副本赋值给子类原型，
            子类构造函数行首调用父类构造函数( es6写法为super() )
