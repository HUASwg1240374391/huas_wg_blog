tcp:
   报头：至少20个字节，
        sequence number:保证了tcp传输的报文都是有序的，对端可以通过序号顺序拼接报文
        acknowledge number：表示数据接收端下一个期望接收的下一个字节的编号是多少，同时也表示此序号之前的数据已经收到
        标识符：
              URG=1:高优先级紧急报文
              ACK=1:表示确认号字段有效
              PSH=1:表示接收端应该里即将数据push给应用层，而不是等缓冲区满了再push
              RST=1:表示当前tcp连接出现严重问题，可能需要重新建立tcp连接，可用于拒绝非法报文段和拒绝连接请求
              SYN=1:当SYN=1,ACK=0时，表示当前报文段时一个连接请求报文，当 SYN=1，ACK=1时，表示此报文是一个同意建立连接的请求报文
              FIN=1:表示该报文段是一个释放连接的请求报文
    状态机:http是无连接的，所以作为底层的tcp也是无连接的，虽然看似将两端连接了起来，其实只是两端共同维护了一个状态
    三次握手:b->syn->s   s->syn+ack->b b->ack->s
            TCP连接为什么要通过三步而不是两步：防止失败的请求连接（网络延时等）在超时重传数据交互完毕连接关闭时到达服务端，而服务端直接进入确认状态却无客户端响应而浪费资源
    四次挥手:TCP是全双工，所以b和s端都需要发送 SYN和ACK
            第一次:b端数据发送完毕，申请释放连接，放松SYN请求
            第二次:s端收到SYN请求，同意释放请求发送ACK确认
            第三次:s端数据发送完毕，发送释放连接请求SYN 
            第四次:b端确认释放（进入time_wait状态，防止s端未收到ACK请求从而无法close，此状态维持2msl即最大生存期，如果一直未收到s端的重传请求则到时间进入close状态）

              
              