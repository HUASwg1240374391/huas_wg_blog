实现了播放组件(含拖拽控制滚动条进度):
    使用vue自定义事件，将用于input的v-model作用于组件的双向绑定，绑定变量作为props被子组件接收，
    (该双向绑定的变量不直接作用于滚动条值，而通过中间变量在条件符合时间接作用于滚动条)
    然后监听该变量，当该变量值改变时向外发送事件消息 this.$emit('input),会作用于外部变量，
    而当外部改变该变量时也会影响子组件内部，隐藏真正的audio控件，获取该dom节点，自定义样式控制audio行为，
    当音频播放时，双向绑定的变量的值随之音频播放的进度不断改变作用于子组件从之影响滚动条，
    当需要拖拽改变滚动条进度从而调节音频进度时，需要设置控制变量，断开外部传值对于滚动条的影响
    当拖拽操作完成时先向外部发送事件，改变音频进度，然后恢复外部传值对滚动条的影响

循环中promise的问题
    需要一次请求多个数据，将axios放在for中请求，待所有请求完毕后开始渲染特定组件，
    如何确定所有的axios请求是否完成可以将所有的promise请求push进一个数组，然后将该数组作为参数
    传入Promise.all()方法中，该方法会等到参数中所有的promise执行完毕后执行后接的then方法中的行为

渲染的组件需要使用网络数据进行渲染，当网络数据请求没有成功响应时vue会报错，但当数据到达时组件会成功响应，所以需要通过v-if控制组件的渲染条件，
当满足条件时在渲染
